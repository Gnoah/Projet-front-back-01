{"ast":null,"code":"import _classCallCheck from \"/root/Bureau/Projet/front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/Bureau/Projet/front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/root/Bureau/Projet/front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/root/Bureau/Projet/front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/root/Bureau/Projet/front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/root/Bureau/Projet/front/src/component/list/List.jsx\";\nimport React, { Component } from 'react';\n\nvar List =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(List, _Component);\n\n  function List(props) {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(List).call(this, props));\n    _this.obj = JSON.parse(_this.state.apiResponse);\n    _this.state = {\n      apiResponse: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"callAPI\",\n    value: function callAPI() {\n      var _this2 = this;\n\n      fetch(\"http://localhost:8080/list\").then(function (response) {\n        return response.text();\n      }).then(function (response) {\n        return _this2.setState({\n          apiResponse: response\n        });\n      }).catch(function (err) {\n        return err;\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.callAPI();\n    }\n  }, {\n    key: \"getFullName\",\n    value: function getFullName(item, index) {\n      var fullname = [item.nom, item.prenom].join(\" \");\n      return fullname;\n    }\n  }, {\n    key: \"myFunction\",\n    value: function myFunction() {\n      console.log(this.obj.map(this.getFullName));\n      document.getElementById(\"liste\").innerHTML = this.obj.map(getFullName);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this3.myFunction();\n        }\n        /*liste = document.getElementById(\"liste\")\n        liste.innerHTML = numbers.map(obj);*/\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Lister\"), React.createElement(\"span\", {\n        id: \"liste\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }));\n    }\n    /*constructor(props) { \n      super(props); \n      this.state = { \n        results: null\n      }; \n      }  \n     componentDidMount() { \n      const data = new FormData(); \n      fetch('http://localhost:8080/list',{    method: 'POST',   body : data })   \n      .then(     (response) => { \n      console.log(\"response\");        \n      console.log(response);         \n      response.json().then((result)=>this.setState({ results: result }))      \n     } )// if the response is a JSON object   )\n     .catch(   error => null )      }   \n     render() {\n      return (   \n      <div className=\"Files\"> \n      <button onClick={this.state.list}>Lister</button>  \n     </div>   );   \n    }*/\n\n  }]);\n\n  return List;\n}(Component);\n\nexport { List as default };\n;","map":{"version":3,"sources":["/root/Bureau/Projet/front/src/component/list/List.jsx"],"names":["React","Component","List","props","obj","JSON","parse","state","apiResponse","fetch","then","response","text","setState","catch","err","callAPI","item","index","fullname","nom","prenom","join","console","log","map","getFullName","document","getElementById","innerHTML","myFunction"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEqBC,I;;;;;AAEnB,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8EAAMA,KAAN;AADiB,UAiBrBC,GAjBqB,GAiBfC,IAAI,CAACC,KAAL,CAAW,MAAKC,KAAL,CAAWC,WAAtB,CAjBe;AAEjB,UAAKD,KAAL,GAAa;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAb;AAFiB;AAGpB;;;;8BAES;AAAA;;AACNC,MAAAA,KAAK,CAAC,4BAAD,CAAL,CACKC,IADL,CACU,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADlB,EAEKF,IAFL,CAEU,UAAAC,QAAQ;AAAA,eAAI,MAAI,CAACE,QAAL,CAAc;AAAEL,UAAAA,WAAW,EAAEG;AAAf,SAAd,CAAJ;AAAA,OAFlB,EAGKG,KAHL,CAGW,UAAAC,GAAG;AAAA,eAAIA,GAAJ;AAAA,OAHd;AAIH;;;wCAEmB;AAChB,WAAKC,OAAL;AACH;;;gCAKWC,I,EAAMC,K,EAAO;AACvB,UAAIC,QAAQ,GAAG,CAACF,IAAI,CAACG,GAAN,EAAUH,IAAI,CAACI,MAAf,EAAuBC,IAAvB,CAA4B,GAA5B,CAAf;AACA,aAAOH,QAAP;AACD;;;iCAEY;AACXI,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpB,GAAL,CAASqB,GAAT,CAAa,KAAKC,WAAlB,CAAZ;AACAC,MAAAA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,SAAjC,GAA6C,KAAKzB,GAAL,CAASqB,GAAT,CAAaC,WAAb,CAA7C;AACD;;;6BAEQ;AAAA;;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAQ,QAAA,OAAO,EAAE;AAAA,iBACf,MAAI,CAACI,UAAL,EADe;AAAA;AAEf;;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EASE;AAAM,QAAA,EAAE,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CADF;AAaD;AACC;;;;;;;;;;;;;;;;;;;;;;;;;EA/CgC7B,S;;SAAbC,I;AAqEpB","sourcesContent":["import React, { Component } from 'react';\n\nexport default class List extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { apiResponse: \"\" };\n}\n\ncallAPI() {\n    fetch(\"http://localhost:8080/list\")\n        .then(response => response.text())\n        .then(response => this.setState({ apiResponse: response }))\n        .catch(err => err);\n}\n\ncomponentDidMount() {\n    this.callAPI();\n}\n\n\nobj = JSON.parse(this.state.apiResponse);\n\ngetFullName(item, index) {\n  var fullname = [item.nom,item.prenom].join(\" \");\n  return fullname;\n}\n\nmyFunction() {\n  console.log(this.obj.map(this.getFullName));\n  document.getElementById(\"liste\").innerHTML = this.obj.map(getFullName);\n} \n\nrender() {\n  \n  return (  \n    <div> \n      \n      <button onClick={()=>\n        this.myFunction()\n        /*liste = document.getElementById(\"liste\")\n        liste.innerHTML = numbers.map(obj);*/\n        \n      }        \n      >Lister</button> \n      <span id=\"liste\"></span>\n    </div>\n    );\n}\n  /*constructor(props) { \n    super(props); \n    this.state = { \n      results: null\n    }; \n\n   }  \n   componentDidMount() { \n    const data = new FormData(); \n    fetch('http://localhost:8080/list',{    method: 'POST',   body : data })   \n    .then(     (response) => { \n    console.log(\"response\");        \n    console.log(response);         \n    response.json().then((result)=>this.setState({ results: result }))      \n   } )// if the response is a JSON object   )\n   .catch(   error => null )      }   \n   render() {\n    return (   \n    <div className=\"Files\"> \n    <button onClick={this.state.list}>Lister</button>  \n   </div>   );   \n  }*/\n};\n  "]},"metadata":{},"sourceType":"module"}